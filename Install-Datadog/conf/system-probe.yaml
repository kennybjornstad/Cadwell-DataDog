

##################################
## System Probe Configuration ##
##################################

## @param system_probe_config - custom object - optional
## Enter specific configurations for your System Probe data collection.
## Uncomment this parameter and the one below to enable them.
#
# system_probe_config:
  ## @param sysprobe_socket - string - optional - default: /opt/datadog-agent/run/sysprobe.sock
  ## @env DD_SYSTEM_PROBE_CONFIG_SYSPROBE_SOCKET - string - optional - default: /opt/datadog-agent/run/sysprobe.sock
  ## The full path to the location of the unix socket where system probes are accessed.
  #
  # sysprobe_socket: /opt/datadog-agent/run/sysprobe.sock

  ## @param log_file - string - optional - default: /var/log/datadog/system-probe.log
  ## @env DD_SYSTEM_PROBE_CONFIG_LOG_FILE - string - optional - default: /var/log/datadog/system-probe.log
  ## The full path to the file where system-probe logs are written.
  #
  # log_file: /var/log/datadog/system-probe.log

########################################
## System Probe Network Configuration ##
########################################

network_config:
  ## @param enabled - boolean - optional - default: false
  ## Set to true to enable the Network Module of the System Probe
  #
  enabled: false



##########################################
## Security Agent Runtime Configuration ##
##                                      ##
## Settings to sent logs to Datadog are ##
## fetched from section `logs_config`   ##
##########################################

# runtime_security_config:
  ## @param enabled - boolean - optional - default: false
  ## @env DD_RUNTIME_SECURITY_CONFIG_ENABLED - boolean - optional - default: false
  ## Set to true to enable Cloud Workload Security (CWS).
  #
  # enabled: false

  ## @param fim_enabled - boolean - optional - default: false
  ## Set to true to enable the File Integrity Monitoring (FIM) feature of Cloud Workload Security (CWS).
  #
  # fim_enabled: false

  ## @param socket - string - optional - default: /opt/datadog-agent/run/runtime-security.sock
  ## @env DD_RUNTIME_SECURITY_CONFIG_SOCKET - string - optional - default: /opt/datadog-agent/run/runtime-security.sock
  ## The full path to the location of the unix socket where security runtime module is accessed.
  #
  # socket: /opt/datadog-agent/run/runtime-security.sock

  ## @param policies - custom object - optional
  ## Policy files
  # policies:

    ## @param dir - string - default: /etc/datadog-agent/runtime-security.d
    ## @env DD_RUNTIME_SECURITY_CONFIG_POLICIES_DIR - string - default: /etc/datadog-agent/runtime-security.d
    ## Path from where the policy files will be loaded
    #
    # dir: /etc/datadog-agent/runtime-security.d

  ## @param syscall_monitor - custom object - optional
  ## Syscall monitoring
  #
  # syscall_monitor:

    ## @param enabled - boolean - optional - default: false
    ## @env DD_RUNTIME_SECURITY_CONFIG_SYSCALL_MONITOR_ENABLED - boolean - optional - default: false
    ## Set to true to enable the Syscall monitoring (recommended for troubleshooting only).
    #
    #  enabled: false

  ## @param custom_sensitive_words - list of strings - optional
  ## @env DD_RUNTIME_SECURITY_CONFIG_CUSTOM_SENSITIVE_WORDS - space separated list of strings - optional
  ## Define your own list of sensitive data to be merged with the default one.
  ## Read more on Datadog documentation:
  ## https://docs.datadoghq.com/graphing/infrastructure/process/#process-arguments-scrubbing
  #
  # custom_sensitive_words:
  #   - 'personal_key'
  #   - '*token'
  #   - 'sql*'
  #   - '*pass*d*'

###################################
## OpenTelemetry Configuration   ##
###################################

## @param otlp_config - custom object - optional
## This section configures OTLP ingest in the Datadog Agent.
#
# otlp_config:

  ## @param receiver - custom object - optional
  ## The receiver configuration. It follows the OpenTelemetry Collector's OTLP Receiver Configuration.
  ## This template lists the most commonly used settings; see the OpenTelemetry Collector documentation
  ## for a full list of available settings:
  ## https://github.com/open-telemetry/opentelemetry-collector/blob/main/receiver/otlpreceiver/config.md
  #
  # receiver:

    ## @param protocols - custom object - optional
    ## Configuration for the supported protocols.
    #
    # protocols:

        ## @param grpc - custom object - optional
        ## Configuration for OTLP/gRPC listener.
        ## Setting this as an empty section enables the OTLP/gRPC listener with default options.
        #
        # grpc:

          ## @param endpoint - string - optional - default: 0.0.0.0:4317
          ## @env DD_OTLP_CONFIG_RECEIVER_PROTOCOLS_GRPC_ENDPOINT - string - optional - default: 0.0.0.0:4317
          ## The OTLP/gRPC listener endpoint.
          #
          # endpoint: 0.0.0.0:4317

          ## @param transport - string - optional - default: tcp
          ## @env DD_OTLP_CONFIG_RECEIVER_PROTOCOLS_GRPC_TRANSPORT - string - optional - default: tcp
          ## The OTLP/gRPC listener transport protocol.
          ## Known protocols are "tcp", "udp", "ip", "unix", "unixgram", and "unixpacket".
          #
          # transport: tcp

        ## @param http - custom object - optional
        ## Configuration for OTLP/HTTP listener.
        ## Setting this as an empty section enables the OTLP/HTTP listener with default options.
        #
        # http:

          ## @param endpoint - string - optional - default: 0.0.0.0:4318
          ## @env DD_OTLP_CONFIG_RECEIVER_PROTOCOLS_HTTP_ENDPOINT - string - optional - default: 0.0.0.0:4318
          ## The OTLP/HTTP listener endpoint.
          #
          # endpoint: 0.0.0.0:4318

  ## @param metrics - custom object - optional
  ## Metrics-specific configuration for OTLP ingest in the Datadog Agent.
  ## Note that these configuration options may change in future minor Agent versions.
  #
  # metrics:

    ## @param enabled - boolean - optional - default: true
    ## @env DD_OTLP_CONFIG_METRICS_ENABLED - boolean - optional - default: true
    ## Whether to ingest metrics through the OTLP endpoint. Set to false to disable OTLP metrics ingest.
    #
    # enabled: true

    ## @param resource_attributes_as_tags - boolean - optional - default: false
    ## @env DD_OTLP_CONFIG_METRICS_RESOURCE_ATTRIBUTES_AS_TAGS - boolean - optional - default: false
    ## Set to true to add all resource attributes of a metric to its metric tags.
    ## When set to false, only a small predefined subset of resource attributes is converted
    ## to metric tags.
    #
    # resource_attributes_as_tags: false

    ## @param instrumentation_library_metadata_as_tags - boolean - optional - default: false
    ## @env DD_OTLP_CONFIG_METRICS_INSTRUMENTATION_LIBRARY_METADATA_AS_TAGS - boolean - optional - default: false
    ## Set to true to add metadata about the instrumentation library that created a metric.
    #
    # instrumentation_library_metadata_as_tags: false

    ## @param tag_cardinality - string - optional - default: low
    ## @env DD_OTLP_CONFIG_METRICS_TAG_CARDINALITY - string - optional - default: low
    ## Configure the level of granularity of tags to send for OTLP metrics. Choices are:
    ##   * low: add tags about low-cardinality objects (clusters, hosts, deployments, container images, ...)
    ##   * orchestrator: add tags about pod, (in Kubernetes), or task (in ECS or Mesos) -level of cardinality
    ##   * high: add tags about high-cardinality objects (individual containers, user IDs in requests, ...)
    ## WARNING: sending container tags for checks metrics may create more metrics
    ## (one per container instead of one per host). This may impact your custom metrics billing.
    #
    # tag_cardinality: low

    ## @param report_quantiles - boolean - optional - default: true
    ## @env DD_OTLP_CONFIG_METRICS_REPORT_QUANTILES - boolean - optional - default: true
    ## Whether to report quantile metrics for OTLP Summary points.
    ## See https://docs.datadoghq.com/metrics/otlp/?tab=summary for more details.
    #
    # report_quantiles: true

    ## @param send_monotonic_counter - boolean - optional - default: false
    ## @env DD_OTLP_CONFIG_METRICS_SEND_MONOTONIC_COUNTER - boolean - optional - default: false
    ## Whether to report monotonic metrics as counters or gauges (raw value).
    ## See https://docs.datadoghq.com/integrations/guide/prometheus-metrics/#counter
    ## for further details.
    #
    # send_monotonic_counter: true

    ## @param delta_ttl - int - optional - default: 3600
    ## @env DD_OTLP_CONFIG_METRICS_DELTA_TTL - int - optional - default: 3600
    ## The amount of time (in seconds) that values are kept in memory for
    ## calculating deltas for cumulative monotonic metrics.
    #
    # delta_ttl: 3600

    ## @param histograms - custom object - optional
    ## Configuration for OTLP Histograms.
    ## See https://docs.datadoghq.com/metrics/otlp/?tab=histogram for details.
    #
    # histograms:

      ## @param mode - string - optional - default: distributions
      ## @env DD_OTLP_CONFIG_METRICS_HISTOGRAMS_MODE - string - optional - default: distributions
      ## How to report histograms. Valid values are:
      ##
      ## - `distributions` to report metrics as Datadog distributions (recommended).
      ## - `nobuckets` to not report bucket metrics,
      ## - `counters` to report one metric per histogram bucket.
      #
      # mode: distributions

      ## @param send_count_sum_metrics - boolean - optional - default: false
      ## @env DD_OTLP_CONFIG_METRICS_HISTOGRAMS_SEND_COUNT_SUM_METRICS - boolean - optional - default: false
      ## Whether to report sum and count as separate histogram metrics.
      #
      # send_count_sum_metrics: false

  ## @param traces - custom object - optional
  ## Traces-specific configuration for OTLP ingest in the Datadog Agent.
  #
  # traces:

    ## @param enabled - boolean - optional - default: true
    ## @env DD_OTLP_CONFIG_TRACES_ENABLED - boolean - optional - default: true
    ## Whether to ingest traces through the OTLP endpoint. Set to false to disable OTLP traces ingest.
    #
    # enabled: true
